server.port=18081

#h2
#datasource
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:transacao
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Spring data
spring.jpa.hibernate.ddl-auto=update
#spring.datasource.platform=h2

# Endereco do Kafka
spring.kafka.bootstrap-servers=localhost:9092
# Identificador do grupo de consumo
spring.kafka.consumer.group-id=transacoes-api
# Modelo de coleta do consumidor (latest, earliest, none)
#tempo de escuta para gerenciamento do kafka
spring.kafka.consumer.auto-offset-reset=earliest
# auto commit
spring.kafka.consumer.enable-auto-commit=false
# Formato da chave (String) recebida
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
transaction.topic=transacoes

#config keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWK_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

#Refatorado
# Valor padrao
#cartoes.host=${CARTOES_URL:http://localhost:9999/api/cartoes}